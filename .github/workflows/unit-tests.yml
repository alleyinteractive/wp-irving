name: Unit tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    name: PHPUnit
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    continue-on-error: ${{ matrix.can_fail }}

    strategy:
      fail-fast: true
      matrix:
        php: [7.4]
        wp_version: ["latest"]
        can_fail: [false]
    env:
      WP_DEVELOP_DIR: /tmp/wordpress
      WP_CORE_DIR: /tmp/wordpress
      WP_VERSION: ${{ matrix.wp_version }}

    steps:
      - name: Cancel previous runs of this workflow (pull requests only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup Memcached
        uses: niden/actions-memcached@v7

      - name: Install WordPress tests
        shell: bash
        run: |
          bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION

      - name: Run PHPUnit
        uses: php-actions/phpunit@v2
        with:
          version: 7.5.0

